openapi: 3.0.0
info:
  version: '1.0'
  title: Liberty API
servers:
  - url: /api/v1
paths:
  #---
  # SYS API
  #---
  /sys/configs/app:
    get:
      tags:
        - System
      summary: 서비스 설정값
      description: 클라이언트에서 필요한 서비스 설정값을 가져온다
      operationId: getConfigsApp
      responses:
        '200':
          description: Service Config
          content:
            application/json:
              schema:
                type: object
                properties:
                  bwAccount:
                    type: object
                    properties:
                      bankName:
                        type: string
                        description: 블루웨일 입금 계좌 은행
                        example: DBS Bank
                      accountNumber:
                        type: string
                        description: 블루웨일 입금 계좌번호
                        example: 1002-342-302953
                      accountOwner:
                        type: string
                        description: 블루웨일 입금 계좌 은행명
                        example: 블루웨일
                      swiftCode:
                        type: string
                        description: 블루웨일 계좌 swiftCode
                        example: DBSSSGSG
                      bankAddress:
                        type: string
                        description: 은행 주소
                        example: 12 Marina Boulevard, DBS Asia Central, Marina Bay Financial Centre Tower 3, Singapore 018982
                  localBankAccount:
                    type: array
                    items:
                      type: object
                      properties:
                        currency:
                          $ref: '#/components/schemas/CurrencyCode'
                        isUsed:
                          type: boolean
                          example: true
                        bankName:
                          type: string
                          example: 'DBS Bank - UK'
                        accountOwner:
                          type: string
                          example: 'Shareable Asset PL - UK'
                        accountNumber:
                          type: string
                          example: '072-022963-0'
                  showPreference:
                    type: "array"
                    items:
                      type: "string"
                    example: ["rewardBanner"]
                  otpTimeout:
                    type: "object"
                    description: "otp 기다리는 시간 timeout"
                    properties:
                      value:
                        type: integer
                        example: 120
                      timeScale:
                        type: string
                        description: "otpTimeout value에 대한 부가 설명"
                        example: "seconds (possible value: 60~120)"
                  timestamp:
                    type: integer
                    description: "server의 unix timestamp"
                    example: 1608194428984
                  timezone:
                    type: string
                    description: "Local Time Zone"
                    example: "Asia/Singapore"
                  idDocsSelectableCountries:
                    type: array
                    items:
                      type: object
                      properties:
                        countryCode:
                          type: string
                          example: KOR
                        passport:
                          type: boolean
                          example: true
                        nationalId:
                          type: boolean
                          example: true
                        drivingLicense:
                          type: boolean
                          example: true
                        residencePermit:
                          type: boolean
                          example: true
  /sys/versions:
    get:
      tags:
        - System
      summary: 지원 가능한 모바일 앱의 버전 정보를 가져온다
      description: 지원 가능한 Android와 iOS 의 minimum version, latest version 을 가져온다
      operationId: getVersions
      responses:
        '200':
          description: 지원 가능한 MobileVersion
          content:
            application/json:
              schema:
                type: object
                properties:
                  androidVersion:
                    $ref: '#/components/schemas/MobileVersion'
                  iosVersion:
                    $ref: '#/components/schemas/MobileVersion'

  #---
  # Auth API
  #---
  /auth/session/status:
    get:
      summary: 로그인 여부 확인
      description: 로그인 후 session 유효 확인
      operationId: getAuthSessionStatus
      tags:
        - Auth
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userStatus:
                    $ref: '#/components/schemas/userStatus'
                  signupStep:
                    $ref: '#/components/schemas/SignupStep'
        401:
          description: |
            - INVALID_SESSION, session expired.
            - INVALID_SID, No longer valid Session ID
      security:
        - cookieAuth: []
  /auth/member/status:
    get:
      summary: 회원 상태 확인
      description: 전화번호를 이용해 회원가입/임시회원/비회원 여부 확인
      operationId: getAuthMemberStatus
      tags:
        - Auth
      parameters:
        - in: query
          name: countryCallingCode
          description: 국가번호
          schema:
            type: string
            example: '+82'
        - in: query
          name: phone
          description: 확인하려는 모바일 번호
          schema:
            type: string
            example: '01012341234'
        - in: query
          name: deviceId
          description: 앱이 설치되어 있는 device id
          schema:
            type: string
            example: 11a3eef5-a726-4ecd-a618-993131e67ae9
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userStatus:
                    $ref: '#/components/schemas/userStatus'
                    example: NOT_MEMBER
                  signupStep?:
                    $ref: '#/components/schemas/SignupStep'
                  isDeviceNotChanged:
                    type: boolean
                    description: device id가 일치 하지 않을때 false. (deviceId값을 보내지 않을때는 true값만 리턴한다.)
                    example: true
        401:
          description: |
            - INVALID_INVESTOR_TYPE, 개인 회원이 아닙니다.
  /auth/signup00/member:
    post:
      summary: 회원등록
      description: 회원을 등록하고 모바일 OTP를 요청한다.
      operationId: postAuthSignupMember
      tags:
        - Auth Signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                countryCallingCode:
                  type: string
                  description: 국제 전화번호 코드
                  example: '+82'
                phone:
                  type: string
                  description: 모바일 전화번호
                  example: '01012341234'
                passcode:
                  type: string
                  example: mypasscode
                deviceModel:
                  type: string
                  example: Mi MIX 2S
                deviceId:
                  type: string
                  example: 11a3eef5-a726-4ecd-a618-993131e67ae9
                osVersion:
                  type: string
                  example: '29'
                appVersion:
                  type: string
                  example: 3.1.5
                adsId?:
                  type: string
                  example: a472b9b2-39df-49e6-aa6b-f465d9f5c6d1
                devicePlatform?:
                  type: string
                  enum: [ANDROID, IOS]
                  example: ANDROID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  countryCallingCode:
                    type: string
                    description: 국제 전화번호 코드
                    example: '+82'
                  phone:
                    type: string
                    description: 모바일 전화번호
                    example: '01012341234'
                  userStatus:
                    $ref: '#/components/schemas/userStatus'
                  requestId:
                    type: string
                    description: otp 발송요청했을때 받은 인증 키값
                    example: 'xxxxxxxxxxxxxxxxxxxxxxx'
        401:
          description: ALREADY_REGISTERED 가입중 이거나 완료된 회원입니다.
  /auth/signup10/otp/mobile/verify:
    post:
      summary: otp 확인. 신규가입
      description: 요청한 otp 확인
      operationId: postAuthSignupOtpMobileVerify
      tags:
        - Auth Signup
      parameters:
        - in: header
          name: otpcode
          description: 발급받은 otp 번호
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                  description: otp 발송요청했을때 받은 인증 키값
                  example: 'xxxxxxxxxxxxxxxxxxxxxxx'
      responses:
        200:
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: liberty.sid=abcde12345; Path=/; HttpOnly
              description: 로그인 세션
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        400:
          description: INVALID_CODE, The code provided does not match the expected value
  /auth/signup14-optional/member/bio/publicKey:
    post:
      tags:
        - Auth Signup
      summary: 'bio 인증을 위한 public key 등록, 신규'
      description: 'bio 인증을 위한 public key 등록, 신규'
      operationId: postSignupMemberBioPublicKey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                publicKey:
                  type: string
                  description: PEM형식으로 default base64타입
                  example: -----BEGIN PUBLIC KEY-----\nMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIZmdW4rKOJFvgVtA5BJwJtrQBD0rpWjMKZ2b6tev\nke9MTgw8Lf7xodca8mca9blFj7lOKP5qhXm4WWQ+OZ41Pw==\n-----END PUBLIC KEY-----
                deviceId:
                  type: string
                  description: signIn시, 보낸 deviceId
                  example: 11a3eef5-a726-4ecd-a618-993131e67ae9
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
        400:
          description: |
            - INVALID_INPUT, 'Already Registered'
            - INVALID_INPUT, 'Different deviceId'
      security:
        - cookieAuth: []
  /auth/signup14-optional/member/bio/challenge:
    post:
      tags:
        - Auth Signup
      summary: "신규"
      description: 모바일에서 바이오인증을 위한 메시지 중 challenge값 요청
      operationId: getAuthSignupMemberBioChallenge
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  challenge:
                    type: string
                    example: "qs2PzfZH_Q"
                    description: 10자리 랜덤문자
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
      security:
        - cookieAuth: []
  /auth/signup15-optional/member/bio/verify:
    post:
      tags:
        - Auth Signup
      summary: "신규"
      description: 바이오 인증요청
      operationId: postAuthSignupMemberBio
      parameters:
        - in: header
          name: nonce
          description: 바이오sign시, 사용한 nonce
          schema:
            type: number
            example: 37790051
        - in: header
          name: signature
          description: 바이오sign시, 나온 signature. url-safe base64
          schema:
            type: string
            example: MEYCIQDIhAvWQFRqa_vV8PCfKRe9R9ia955dlL7S6UG_Zp8RtgIhANdrVql-ZjrpCxaM0saAf2gBqXRKeXIX5USinmncahLX
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
      security:
        - cookieAuth: []
  /auth/signup20/member/encPrivateKey:
    post:
      tags:
        - Auth Signup
      summary: '사용자 지갑의 암호화된 개인키 저장'
      operationId: postAuthSignupMemberEncPrivateKey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                encPrivateKey:
                  type: string
                  description: 암호화된 개인키
                  example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIZmdW4rKOJFvgVtA5BJwJtrQBD0rpWjMKZ2b6tev\nke9MTgw8Lf7xodca8mca9blFj7lOKP5qhXm4WWQ+OZ41Pw==
                publicKey:
                  type: string
                  description: 공개키
                  example: f1A214A2FADD7Ca7d0B1558F402D3dE1ce014ECF
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - cookieAuth: []
  /auth/signup25/occupation:
    get:
      summary: 서버에 직업리스트 요청
      description: 서버에 직업리스트 요청
      tags:
        - Auth Signup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  occupationList:
                    type: array
                    items:
                      type: string
                    example:
                      - 'boxer'
                      - 'engineer'
                      - 'singer'
        500:
          description: INVALID_CODE
      security:
        - cookieAuth: []
  /auth/member/profile:
    put:
      summary: 회원 프로필 수정
      description: 회원 프로필 정보 수정
      operationId: putAuthMemberProfile
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - cookieAuth: []
  /auth/signup30/member/profile:
    post:
      summary: 회원 프로필 정보 저장
      description: 회원 프로필 정보 저장
      operationId: postUsersSignupMemberProfile
      tags:
        - Auth Signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        401:
          description: NO_COUNTRY 입력한 국가는 없는 국가입니다.
        403:
          description: BLACKLIST_COUNTRY 입력하신 국가는 블랙리스트 국가 입니다.
      security:
        - cookieAuth: []
  /auth/signup40/otp/email:
    post:
      tags:
        - Auth Signup
      summary: 이메일 OTP 인증요청. 신규가입
      description: 로그인 없이 이메일로 인증번호 요청
      operationId: postAuthSignupOtpEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 인증 받는 유저의 이메일
                  example: test@test.com
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                properties:
                  requestId:
                    type: string
                    description: otp 인증 키값
                  remainTime:
                    type: number
                    description: verify 남은 시간(초)
        400:
          description:  이미 존재하는 이메일입니다.
      security:
        - cookieAuth: []
  /auth/signup50/otp/email/verify:
    post:
      summary: otp 확인. 신규가입
      description: 요청한 otp 확인
      operationId: postAuthSignupOtpEmailVerify
      tags:
        - Auth Signup
      parameters:
        - in: header
          name: otpcode
          description: 발급받은 otp 번호
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        400:
          description: INVALID_CODE, The code provided does not match the expected value
      security:
        - cookieAuth: []
  /auth/signup60/member/suitability:
    get:
      summary: suitability 질문
      description: suitability 질문 목록 조회
      operationId: getSignupMemberAuthSuitability
      tags:
        - Auth Signup
        - Auth Suitability
      parameters:
        - in: query
          name: language
          description: 조회 하려는 언어 (ISO_639-1, en - english, ko - korean)
          schema:
            type: string
            enum:
              - en
              - ko
            example: en
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuitabilityQuestions"
      security:
        - cookieAuth: []
  /auth/signup70/member/suitability/answer:
    post:
      summary: suitability 답변
      description: suitability 답변 저장
      operationId: postAuthSignupMemberSuitabilityAnswer
      tags:
        - Auth Signup
        - Auth Suitability
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      q:
                        type: number
                        description: 질문 번호
                        example: 1
                      a:
                        type: string
                        description: 질문의 보기 id
                        enum: ['A','B','C']
                        example: A
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  investProfile:
                    type: string
                    enum: ['AGGRESSIVE', 'BALANCED', 'CONSERVATIVE']
  /auth/signup80/member/suitability/finish:
    post:
      summary: suitability 완료
      description: suitability 끝날때 호출 해줘야 하는 api, 호출하면 signupStep SUITABILITY_DONE로 변경된다.
      operationId: postAuthSignupMember/SuitabilityFinish
      tags:
        - Auth Signup
        - Auth Suitability
      requestBody:
        content:
          application/json:
            schema:
              properties:
                investProfile?:
                  type: string
                  enum: ['AGGRESSIVE', 'BALANCED', 'CONSERVATIVE']
                  example: BALANCED
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - cookieAuth: []
  /auth/member/suitability/investProfile:
    get:
      description: suitability investProfile 조회
      tags:
        - Auth Suitability
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  investProfile:
                    type: string
                    enum: ['AGGRESSIVE', 'BALANCED', 'CONSERVATIVE']
      security:
        - cookieAuth: []
    put:
      description: (member) investorProfile 변경
      tags:
        - Auth Suitability
      requestBody:
        content:
          application/json:
            schema:
              properties:
                investProfile:
                  type: string
                  enum: ['AGGRESSIVE', 'BALANCED', 'CONSERVATIVE']
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - cookieAuth: []

  # signin
  /auth/signin/passcode:
    post:
      summary: Passcode를 입력
      description: 전화번호와 passcode 확인, 로그인 시도 5회 초과 검사
      operationId: postAuthSigninPasscode
      tags:
        - Auth Signin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userStatus:
                    $ref: '#/components/schemas/userStatus'
        401:
          description: |
            - NO_USER, 없는 유저 입니다.
            - INVALID_PASSWORD, 잘못된 비밀번호 입니다.
            - BAN_MEMBER, 로그인 금지된 계정입니다. 관리자에게 문의 하세요.
        403:
          description: EXCEED_RETRY 로그인 시도 횟수 5회 초과 입니다.
  /auth/otp/mobile/{action}:
    post:
      tags:
        - Auth OTP
      summary: 모바일 OTP 인증 요청
      description: 모바일 OTP 인증 요청
      operationId: postAuthOtpMobileAction
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
            enum: [invest, withdraw, backUpWallet, qrOp, changePassword, signin,
                  changeBankAccount, deletedMember, adminSignIn, usersMe,
                  reRegisterPublic, currencyExchange, changePhoneNumber]
            example: invest
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                properties:
                  requestId:
                    type: string
                    description: otp 인증 키값
                    example: saldjf23r23
                  remainTime:
                    type: number
                    description: verify 남은 시간(초)
                    example: 60
        400:
          description: |
            - "INVALID_TYPE, No OptType: {action}"
            - SMS_REQUEST_ERROR
            - Throttled, Throttled	You are trying to send more than the maximum of 30 requests per second.
            - ParameterMissing, Your request is incomplete and missing the mandatory parameter $parameter	The stated parameter is missing.
            - InvalidValue, Invalid value for parameter $parameter	Invalid value for parameter.If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.
            - InvalidCredential, Invalid credentials were provided	The supplied API key or secret in the request is either invalid or disabled.
            - InternalError, Internal Error	An error occurred processing this request in the Cloud Communications Platform.
            - Unable, "The Nexmo platform was unable to process this message for the following reason - $reason	The request could not be routed."
            - BlackList, The number you are trying to verify is blacklisted for verification.
            - Barred, The api_key you supplied is for an account that has been barred from submitting messages.
            - OutOfBalance, Partner quota exceeded	Your account does not have sufficient credit to process this request.
            - Duplicated, Concurrent verifications to the same number are not allowed
            - Rejected, The destination number is not in a supported network	The request has been rejected. Find out more about this error in the Knowledge Base
            - NotMatched, The code inserted does not match the expected value
            - WrongCode, The wrong code was provided too many times	You can run Verify check on a specific request_id up to three times unless a new verification code is generated. If you check a request more than three times, it is set to FAILED and you cannot check it again.
            - TooManyRequest, Too many request_ids provided	You added more than the maximum ten request_ids to your request.
            - NoMoreEvent, No more events are left to execute for this request
            - NotSupport, This account does not support the parameter - pin_code.	Only certain accounts have the ability to set the pin_code. Please contact your account manager for more information.
            - NoRequestFound, No request found	There are no matching verify requests.
        401:
          description: NO_USER 입력한 전화번호와 일치하는 유저가 없습니다.
  /auth/signin/otp:
    post:
      summary: OTP를 이용한 로그인
      description: OTP를 이용하여 최종 로그인을 한다.
      operationId: postAuthsigninOtp
      tags:
        - Auth Signin
        - Auth OTP
      parameters:
        - in: header
          name: otpcode
          description: otp 인증 코드
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                countryCallingCode:
                  type: string
                  description: 국제 전화번호 코드
                  example: '+82'
                phone:
                  type: string
                  description: 모바일 전화번호
                  example: '01012341234'
                deviceModel:
                  type: string
                  example: Mi MIX 2S
                deviceId:
                  type: string
                  example: 11a3eef5-a726-4ecd-a618-993131e67ae9
                osVersion:
                  type: string
                  example: '29'
                appVersion:
                  type: string
                  example: 3.1.5
                adsId?:
                  type: string
                  example: a472b9b2-39df-49e6-aa6b-f465d9f5c6d1
                devicePlatform?:
                  type: string
                  enum: [ANDROID, IOS]
                  example: ANDROID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  countryCallingCode:
                    type: string
                    description: 국제 전화번호 코드
                    example: '+82'
                  phone:
                    type: string
                    description: 모바일 전화번호
                    example: '01012341234'
                  userStatus:
                    $ref: '#/components/schemas/userStatus'
                  signupStep:
                    $ref: '#/components/schemas/SignupStep'
                  isMigrationAgree:
                    type: boolean
                    description: migration 동의 여부
                    example: false
        401:
          description: |
            - NO_USER 입력한 이메일과 일치하는 유저가 없습니다.
            - BAN_MEMBER 로그인 금지된 계정입니다. 관리자에게 문의 하세요.
            - INVALID_MEMBER 회원가입이 완료되지 않았습니다.
        403:
          description: |
            - EXCEED_RETRY 로그인 시도 횟수 5회 초과 입니다.
            - INVALID_PASSWORD 잘못된 비밀번호 입니다.
        500:
          description: NO_URL_OR_METHOD 로그인 실패!
  /auth/member/bio/challenge/{action}:
    post:
      tags:
        - Auth Bio
      summary: 바이오 인증을 위한 challenge값 요청
      description: 모바일에서 바이오인증을 위한 메시지 중 challenge값 요청
      operationId: getAuthMemberBioChallenge
      parameters:
        - in: path
          name: action
          required: true
          schema:
            type: string
            enum: [invest, addFunds, withdraw, backUpWallet, qrOp, signin,
                  changeBankAccount, deletedMember, usersMe, registerPublic,
                  currencyExchange]
            example: invest
          description: 바이오 인증을 하기 위한 동작
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  challenge:
                    type: string
                    example: "qs2PzfZH_Q"
                    description: 10자리 랜덤문자
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
      security:
        - cookieAuth: []
  /auth/signin/bio:
    post:
      summary: '바이오 인증'
      description: 바이오 인증 통한 최종 로그인
      operationId: postAuthSigninBio
      tags:
        - Auth Signin
        - Auth Bio
      parameters:
        - in: header
          name: nonce
          description: 바이오sign시, 사용한 nonce
          schema:
            type: string
            example: 37790051
        - in: header
          name: signature
          description: 바이오sign시, 나온 signature. url-safe base64
          schema:
            type: string
            example: MEYCIQDIhAvWQFRqa_vV8PCfKRe9R9ia955dlL7S6UG_Zp8RtgIhANdrVql-ZjrpCxaM0saAf2gBqXRKeXIX5USinmncahLX
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                countryCallingCode:
                  type: string
                  description: 국제 전화번호 코드
                  example: '+82'
                phone:
                  type: string
                  description: 모바일 전화번호
                  example: '01012341234'
                deviceModel:
                  type: string
                  example: Mi MIX 2S
                deviceId:
                  type: string
                  example: 11a3eef5-a726-4ecd-a618-993131e67ae9
                osVersion:
                  type: string
                  example: '29'
                appVersion:
                  type: string
                  example: 3.1.5
                adsId?:
                  type: string
                  example: a472b9b2-39df-49e6-aa6b-f465d9f5c6d1
                devicePlatform?:
                  type: string
                  enum: [ANDROID, IOS]
                  example: ANDROID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  countryCallingCode:
                    type: string
                    description: 국제 전화번호 코드
                    example: '+82'
                  phone:
                    type: string
                    description: 모바일 전화번호
                    example: '01012341234'
                  userStatus:
                    $ref: '#/components/schemas/userStatus'
                  signupStep:
                    $ref: '#/components/schemas/SignupStep'
                  isMigrationAgree:
                    type: boolean
                    description: migration 동의 여부
                    example: false
        401:
          description: |
            - NO_USER 입력한 이메일과 일치하는 유저가 없습니다.
            - BAN_MEMBER 로그인 금지된 계정입니다. 관리자에게 문의 하세요.
            - INVALID_MEMBER 회원가입이 완료되지 않았습니다.
        403:
          description: |
            - EXCEED_RETRY 로그인 시도 횟수 5회 초과 입니다.
            - INVALID_PASSWORD 잘못된 비밀번호 입니다.
        500:
          description: NO_URL_OR_METHOD 로그인 실패!
  /auth/otp/mobile/verify:
    post:
      summary: otp 확인
      description: 요청한 otp 확인
      operationId: postAuthMobileVerify
      tags:
        - Auth OTP
      parameters:
        - in: header
          name: otpcode
          description: 발급받은 otp 번호
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        400:
          description: INVALID_CODE, The code provided does not match the expected value
      security:
        - cookieAuth: []
  /auth/member/bio/verify:
    post:
      tags:
        - Auth Bio
      summary: 바이오 인증
      description: 바이오 인증요청
      operationId: postAuthMemberBioVerify
      parameters:
        - in: header
          name: nonce
          description: 바이오sign시, 사용한 nonce
          schema:
            type: number
            example: 37790051
        - in: header
          name: signature
          description: 바이오sign시, 나온 signature. url-safe base64
          schema:
            type: string
            example: MEYCIQDIhAvWQFRqa_vV8PCfKRe9R9ia955dlL7S6UG_Zp8RtgIhANdrVql-ZjrpCxaM0saAf2gBqXRKeXIX5USinmncahLX
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
      security:
        - cookieAuth: []

  #---
  # Fund API
  #---
  /fund/fundraisings:
    get:
      tags:
      - Fundraising
      summary: get fundraising list
      operationId: getFundFundraisings
      parameters:
        - in: query
          name: currencyCode
          description: 'Multi Currency 통화코드 (default: GBP)'
          schema:
            $ref: "#/components/schemas/CurrencyCode"
        - in: query
          name: status
          description: default값은 ALL(status 값이 없는 경우), OPEN CLOSED를 사용
          schema:
            type: string
            enum: [ALL, OPEN, CLOSED]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FundraisingView"
      security:
        - cookieAuth: []
  /fund/fundraisings/{fundraisingId}:
    get:
      tags:
      - Fundraising
      summary: get a fundraising
      description: 조회 결과가 없을 경우 [] 빈배열 반환
      operationId: getFundFundraisingId
      parameters:
        - in: path
          name: fundraisingId
          required: true
          schema:
            type: integer
          description: 조회하려는 assetId
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/FundraisingView"
      security:
        - cookieAuth: []
  /fund/fundraisings/myBalanceAndMinMaxInvest/{assetId}:
    get:
      tags:
      - Fundraising
      summary: "get users balance and fundraising min max investment amount"
      description: "사용자의 현재 GBP잔고(balance)와 투자 가능한 min/max 투자금액 조회."
      operationId: "getFundFundraisingMyBalanceAndMinMaxInvestAssetId"
      parameters:
        - in: path
          name: assetId
          required: true
          schema:
            type: string
          description: Asset ID
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  minInvestment:
                    type: integer
                    description: minimum invesment amount
                    example: 10
                  maxInvestment:
                    type: integer
                    description: maximum invesment amount
                    example: 10000
                  currencyCode:
                    $ref: "#/components/schemas/CurrencyCode"
                  balance:
                    type: integer
                    description: 유저의 GBP잔고
                    example: 5000
                  reward:
                    type: integer
                    description: 현재 reward 잔액 (GBP기준)
                    example: 1000
      security:
        - cookieAuth: []
  /fund/investments:
    get:
      tags:
        - Fund Investment
      summary: My Investment list
      operationId: "getFundInvestments"
      parameters:
        - in: query
          name: currencyCode
          description: 'Multi Currency 통화코드 (Default: GBP)'
          schema:
            type: string
            example: GBP
        - in: query
          name: status
          description: default값은 ALL(status 값이 없는 경우), OPEN CLOSED를 사용
          schema:
            type: string
            enum: [ALL, OPEN, CLOSED]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MyOrder"
      security:
        - cookieAuth: []
    post:
      summary: 투자요청
      description: 해당 Asset에 투자를 한다.
      operationId: postFundInvestments
      tags:
        - Fund Investment
      parameters:
        - in: header
          name: otpcode?
          schema:
            type: string
          description: otp 인증 코드
        - in: header
          name: nonce?
          schema:
            type: string
          description: bio인증시, 모바일에서 사용된 nonce값
        - in: header
          name: signature?
          schema:
            type: string
          description: bio 인증시, signature, URL_SAFE_BASE64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fundraisingId:
                  description: 투자할 fundrasing id
                  type: integer
                amount:
                  type: integer
                  description: 투자금액 (GBP)
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: integer
                      description: investment id
                      example: 1
                    txKey:
                      type: string
                      description: Signed Transaction을 받기 위한 고유 키
                      example: 0esc8lk
                    txdata:
                      type: string
                      description: un-signed serialized transaction
                      example: 923478293u4293rj2929wfhwsafhaso9y8df0928hwfoas8hf09aw8hf
                    timeout:
                      type: integer
                      description: 유효시간(초)
                      example: 60
        400:
          description: |
            - FUND_NOT_STARATED: 시작 날짜 전에 투자 되는 경우.
            - FUND_ENDED:  Fundraising 날짜가 지난 후에 투자 되는 경우.
            - EXCEEDED_MAXIMUM: 최대 금액 초과한 경우.
            - EXCEEDED_BALANCE: 잔고를 초과한 경우.
            - LESS_THAN_MINIMUM: 시작 날짜 전에 투자 되는 경우.
        401:
          description: "INVALID_KEY 입력한 key값이 잘못되었을때"
        404:
          description: "NO_RESOURCE: 존재하지 않는 fundraising."
        500:
          description: "BLOCKCHAIN_ERROR: 블록체인 에러가 난 경우."
      security:
        - cookieAuth: []
  /fund/investments/{investId}:
    get:
      tags:
        - Fund Investment
      summary: My Order Detail
      operationId: "getFundInvestmentsId"
      parameters:
        - in: query
          name: currencyCode
          description: 'Multi Currency 통화코드 (Default: GBP)'
          schema:
            type: string
            example: GBP
        - in: path
          name: investId
          required: true
          description: 투자중인 항목의 세부항목
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyOrder"
      security:
        - cookieAuth: []
  /fund/investments/{investId}/cancel:
    put:
      tags:
        - Fund Investment
      summary: Investment Cancel
      operationId: "putFundInvestmentsIdCancel"
      parameters:
        - in: path
          name: investId
          required: true
          description: 투자중인 항목의 세부항목
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - cookieAuth: []
  /fund/investments/{investId}/transaction:
    put:
      summary: Sign Transaction
      description: 서버로 부터 받은 transaction을 사인하여 전송한다.
      operationId: putFundInvestmentsIdTransaction
      tags:
        - Fund Investment
      parameters:
        - in: path
          name: investId
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                txKey:
                  type: string
                  description: 이미 전송된 Transaction의 고유키
                  example: 0esc8lk
                signed_txdata:
                  type: string
                  description: Sing한 Transaction
                  example: 9asd8pfs9d8f9sa8df9w8efoikwshfksahdfasiodfhu
      responses:
        200:
          # Todo: 작업중
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: investment id
                    example: 1
                  amount:
                    type: number
                    description: 투자금액
                    example: 1000
                  annualYieldRate:
                    type: number
                    description: 연간 수익률
                    example: 5.5
                  annualProfit:
                    type: number
                    description: 연간 수익
                    example: 55
                  assetId:
                    type: integer
                    description: asset table id
                    example: 11
                  currencyCode:
                    $ref: "#/components/schemas/CurrencyCode"
                  fundStatus:
                    type: string
                    description: 투자 진행 및 결과 상태
                    enum:
                      - Fundraising
                      - Refunded
                      - TokenIssued
                      - Failed
                  assetName:
                    type: string
                    description: 자산 이름
                  assetType:
                    type: string
                    description: 자산 종류
                    enum:
                      - JUNIOR_DEBT
                      - SENIOR_DEBT
                      - EQUITY
                  assetSymbol:
                    type: string
                    description: asset symbol
                    example: TES
                  createdAt:
                    type: string
                    example: "2019-08-26T06:08:14.000Z"

        404:
          description: "NO_TXKEY: Transaction을 찾지 못함."
  /fund/investments/countForUser:
    get:
      tags:
        - Fund Investment
      summary: "Get investment count for user"
      description: "해당 자산에 유저가 투자한 횟수를 조회"
      operationId: "getFundInvestmentsCountForUser"
      parameters:
        - in: query
          name: fundraisingId
          schema:
            type: string
          description: 해당 fundraising의 id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  investCount:
                    type: integer
                    description: 투자횟수
      security:
        - cookieAuth: []
  /fund/wallets/me:
    get:
      tags:
        - Fund Wallets
      summary: 자신의 Currency 별 Wallet List
      description: 자신의 Currency 별로 Balance와 총 투자금액을 보여준다.
      operationId: getFundMeWallets
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Wallet"
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
      security:
        - cookieAuth: []
  /fund/wallet/me/{currency}:
    get:
      tags:
        - Fund Wallets
      summary: 자신의 지갑의 입출금 내역과 잔고 확인
      description: 자신의 입출금, 투자, 배분등 돈이 들어오고 나가는 transaction 정보와 잔고 표시
      operationId: getFundMeWalletCurrency
      parameters:
        - in: path
          name: currency
          required: true
          schema:
            type: string
            $ref: "#/components/schemas/CurrencyCode"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                properties:
                  balance:
                    type: integer
                    description: 현재 잔액 (GBP기준)
                    example: 15000
                  currencyCode:
                    $ref: "#/components/schemas/CurrencyCode"
                  bankAccount?:
                    type: object
                    $ref: '#/components/schemas/BankAccount'
                  txs:
                    type: array
                    description: 거래내역, group ordering (Waiting -> Processing -> Complete)
                    items:
                      $ref: "#/components/schemas/AccountTx"
      security:
        - cookieAuth: []
  /fund/assets/me:
    get:
      tags:
        - Fund Assets
      summary: 자신의 Currency별 투자 List
      description: 자신의 Currency 별로 Balance와 총 투자금액을 보여준다.
      operationId: getFundAssetsMe
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Wallet"
        404:
          description: |
            - NO_DATA, Not find waiting with userId
            - NO_USER, User not found with {email}
      security:
        - cookieAuth: []
  /fund/assets/me/{currency}:
    get:
      tags:
        - Fund Assets
      summary: My assets overview & list
      operationId: getFundAssetsMeCurrency
      parameters:
        - in: path
          name: currency
          required: true
          description: Multi Currency 통화코드
          schema:
            type: string
            example: GBP
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: object
                    properties:
                      investAmount:
                        type: integer
                        description: 투자금액
                        example: 220000
                      earnedAmount:
                        type: integer
                        description: 지급받은 금액
                        example: 1000
                      netAnnualYield:
                        type: number
                        description: 총 수익율 %
                        example: 5.5
                      currencyCode:
                        $ref: "#/components/schemas/CurrencyCode"
                  assetList:
                    type: array
                    description: 나의 투자내역
                    items:
                      $ref: "#/components/schemas/MyAsset"
                  dividendList:
                    type: array
                    description: 분기별 지급받은 금액 목록 (오늘을 기준으로 1년 - 4쿼터)
                    items:
                      type: object
                      properties:
                        amount:
                          type: integer
                          description: 분기당 받은 금액
                          example: 3500
                        quarter:
                          type: number
                          description: 분기
                          example: 1
                        year:
                          type: number
                          description: 년도
                          example: 2020
                        currencyCode:
                          $ref: "#/components/schemas/CurrencyCode"
      security:
        - cookieAuth: []
  /fund/feeds:
    get:
      summary: feed 목록 조회
      description: feed 목록 조회
      tags:
        - Fund Feeds
      parameters:
        - in: query
          name: tags
          description: 입력받은 tag로 검색 (여러tag를 입력하면 모두 해당되는 feed만 검색) ex) ['tag1', 'tag2']
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: feed id
                      example: 5
                    media:
                      type: string
                      description: 해당 feed가 등록된곳
                      example: SA Insights
                    subject:
                      type: string
                      description: 제목
                      example: Top 5 Reasons to Invest in Shareable Asset
                    newsIssueDate:
                      type: string
                      description: 해당 feed 개시일
                      example: 2020-09-04T00:00:00.000Z
                    url:
                      type: string
                      description: 해당 feed 원문 링크
                      example: https:\/\/www.shareableasset.com\/insights\/top-5-reasons-to-invest-in-real-estate-on-shareable-asset-5
                    feedImage:
                      type: string
                      description: feed thumbnail 이미지
                      example: https:\/\/stg.shareableasset.com\/uploadImage\/YyKUBnVdQe1599216896221.png
                    tags:
                      type: array
                      items:
                        type: string
                        example: investment
                    viewCnt:
                      type: integer
                      example: 4
                    targetId:
                      type: string
                      example: FEED3
  /feeds/{feedId}/count:
    put:
      summary: feed 조회수 증가
      description: feed 조회수 증가, 조회한 유저 로그 추가
      tags:
        - Fund Feeds
      parameters:
        - in: path
          name: feedId
          required: true
          description: feed id
          schema:
            type: integer
            example: 4
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: OK
      security:
        - cookieAuth: []
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: liberty.sid
  schemas:
    MobileVersion:
      type: object
      properties:
        minVersionCode:
          type: integer
          description: 최소 동작을 위한 mobile 버전 코드
          example: 1
        minVersionName:
          type: string
          description: 최소 동작을 위한 mobile 버전명
          example: 0.0.1
        latestVersionCode:
          type: integer
          description: 최신 mobile 버전 코드
          example: 1
        latestVersionName:
          type: string
          description: 최신 mobile 버전명
          example: 0.0.1
    CurrencyCode:
      type: string
      enum: [AUD, CAD, CHF, CNH, EUR, GBP, HKD, JPY, NZD, NOK, SEK, SGD, USD]
      description: Currency 통화코드
      example: GBP
    CountryCode:
      type: string
      enum: [AUS, CAN, CHE, CHN, EUR, GBR, HKG, JPN, NZL, NOR, SWE, SGP, USA]
      example: GBR
    SignupStep:
      type: string
      enum: [MOBILE_OTP_VERIFIED, BIO_REGISTERED, PK_SET, PERSONAL_INFO_SET,
            EMAIL_OTP_VERIFIED, SUITABILITY_DONE, PROFILE_SUBMITTED,
            ID_SUBMITTED, KYC_READY, PENDING_KYCAML, OCR_FAILED, FACE_FAILED,
            EDD_REQUIRED, POA_REQUIRED, POA_FAILED, UNDER18, DUPLICATE_PASSPORT,
            REJECTED_KYCAML, WHITELISTING, RI_VERIFIED]
      description: 회원가입 진행 상태, userStatus가 NOT_MEMBER인 경우 값이 없을 수 있다.
                  (최초 회원가입시 이 값은 없다.)
      example: PK_SET
    userStatus:
      type: string
      enum: [NOT_MEMBER, PRE_MEMBER, ONBOARDING_MEMBER, MEMBER, BANED_MEMBER,
            DELETED_MEMBER]
      example: MEMBER
      description: |
        NOT_MEMBER - 등록 하지 않은 경우
        PRE_MEMBER - 가입은 되어 있으나 절차가 완료되지 않은 멤버(가입시작하고 Suitability를 완료 전)
        ONBOARDING_MEMBER - Fundraising List는 볼 수 있으나 투자는 불가능한 멤버(KYCAML 완료 전)
        MEMBER - KYCAML이 완료되고 투자가 가능한 멤버

    SuitabilityQuestions:
      type: array
      items:
        type: object
        properties:
          number:
            type: number
            description: 질문 번호
            example: 1
          contents:
            type: string
            description: 질문 내용
            example: 1 + 1
          items:
            type: array
            items:
              type: object
              properties:
                itemId:
                  type: string
                  description: 질문의 보기 id
                  enum: ['A','B','C']
                  example: B
                contents:
                  type: string
                  description: 질문의 보기 내용
                  example: '1'
      example:
        - number: 1
          contents: 1 + 1
          items:
            - itemId: A
              contents: '1'
            - itemId: B
              contents: '2'
            - itemId: C
              contents: '3'
        - number: 2
          contents: 1 + 2
          items:
            - itemId: A
              contents: '1'
            - itemId: B
              contents: '2'
            - itemId: C
              contents: '3'
        - number: 3
          contents: 2 + 2
          items:
            - itemId: A
              contents: '3'
            - itemId: B
              contents: '4'
            - itemId: C
              contents: '5'
        - number: 4
          contents: 1 + 3
          items:
            - itemId: A
              contents: '3'
            - itemId: B
              contents: '4'
            - itemId: C
              contents: '5'
        - number: 5
          contents: 2 + 3
          items:
            - itemId: A
              contents: '3'
            - itemId: B
              contents: '4'
            - itemId: C
              contents: '5'
        - number: 6
          contents: 3 + 3
          items:
            - itemId: A
              contents: '4'
            - itemId: B
              contents: '5'
            - itemId: C
              contents: '6'
        - number: 7
          contents: 1 + 4
          items:
            - itemId: A
              contents: '4'
            - itemId: B
              contents: '5'
            - itemId: C
              contents: '6'
        - number: 8
          contents: 2 + 4
          items:
            - itemId: A
              contents: '4'
            - itemId: B
              contents: '5'
            - itemId: C
              contents: '6'
    Wallet:
      type: object
      properties:
        currencyName:
          type: "string"
          description: currency name
          example: Pounds sterling
        currencyCode:
          $ref: "#/components/schemas/CurrencyCode"
        countryCode:
          $ref: "#/components/schemas/CountryCode"
        symbol:
          type: string
          description: currency symbol
          example: £
        balance:
          type: integer
          example: 198000
        totalInvested:
          type: integer
          example: 1000
        investingAmount:
          type: integer
          example: 1000
          description: fundraising 진행 중인 투자금액
        investedAmount:
          type: integer
          example: 1000
          description: fundraising 완료된 투자금액
    BankAccount:
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "계좌번호"
          example: '123*****789'
        accountOwner:
          type: "string"
          description: "예금주명"
          example: '홍길동'
        confirmStatus:
          type: "string"
          description: 계좌 확인 상태 ["OPEN" - 확인코드 확인 전, "CODE_SENT" - 관리자가 확인코드와 함께 1$ 입금, "DONE" - 확인코드 확인 후]
          enum: [WAITING_MONEY_TRANSFER, OPEN, CODE_SENT, REVIEWED, PROCESSING, READY, DISTRIBUTING, DONE, REJECTED]
        bankName:
          type: "string"
          description: 은행이름
          example: 'GoodBank'
        bankCountry:
          type: "string"
          description: 은행 국가
          example: 'UK'
        swiftCode:
          type: string
          description: swiftCode
    AccountTx:
      type: object
      properties:
        id:
          type: integer
          description: account id
          example: 1
        userId:
          type: integer
          description: 거래 발생 userId
          example: 1
        currencyCode:
          type: string
          description: 통화 코드
          example: GBP
        pecuniaryType:
          type: string
          description: 돈의 흐름 관점에서의 tx 형태
          enum:
            - WITHDRAW
            - ADD_FUNDS
            - INVEST
            - REFUND
            - INTEREST
            - DIVIDEND
            - PRINCIPAL
            - FUNDING
          example: ADD_FUNDS
        amount:
          type: integer
          description: 거래액
          example: 5000
        fee:
          type: integer
          description: 수수료
          example: 1000
        processStatus:
          type: string
          description: 거래의 처리상태
          enum:
            - Waiting
            - Processing
            - Complete
          example: Complete
        lastBalance:
          type: integer
          description: transaction 발생 시점의 balance. 단, processStatus 가 "Waiting" 인 경우에는 null.
          example: 10000
        targetBankAccount:
          type: string
          description: transaction 으로 인해 입금될 은행 계좌 (add-fund 인 경우에 SA 은행 정보, withdraw 인 경우에 사용자 은행 정보)
          example: HSBC 123*****789
        desc:
          type: string
          description: 거래 설명 (특정 asset 과 관련된 거래라면 asset 이름)
          example: Hilton Hotel
        sourceId:
          type: integer
          description: 거래 발생 소스의 id (WITHDRAW의 경우 requests 테이블의 id)
          example: 5000
        sortDate:
          type: string
          description: txs 정렬 시 기준 값으로 사용
          example: "2019-08-26T06:08:14.000Z"
        createdAt:
          type: string
          example: "2019-08-26T06:08:14.000Z"
        updatedAt:
          type: string
          example: "2019-08-26T06:08:14.000Z"
    FundraisingStatus:
      type: string
      enum:
        - OPEN
        - APPROVING_CREATION
        - CREATING
        - CREATED
        - SUBSCRIBED
        - CLOSED
        - APPROVING_ALLOCATING
        - READY_TO_ISSUE
        - REFUNDING
        - ISSUING
        - DISTRIBUTING
        - DISTRIBUTED
        - MATURED
        - EXPIRED
        - FAILED
    AssetStatusForUser:
      type: string
      description: 자산 상태 - 유저용
      enum:
        - ComingSoon
        - Fundraising
        - Processing
        - Active
        - Matured
        - Failed
    AssetType:
      type: string
      description: 자산 종류
      enum:
        - JUNIOR_DEBT
        - SENIOR_DEBT
        - EQUITY
    FundraisingView:
      type: object
      properties:
        id:
          type: integer
          example: 123123
        name:
          type: string
          example: Shareable Asset Holdings
        description:
          type: string
          example: |
            Class A-1 Bonds – S$180m Class A-1 Bonds offered to retail investors in Singapore (Stock Code: 5A1B)
            10MC5 Mandatory Call at end of Year 5 (20 June 2024)
            Fixed interest of 3.85% p.a., payable every six months
            1.0% p.a. interest rate step-up if bond is not redeemed after 5 years
            Bonus payment of 0.5% of principal at redemption if performance condition is met
        assetStatus:
          $ref: '#/components/schemas/FundraisingStatus'
        assetStatusForUser:
          $ref: '#/components/schemas/AssetStatusForUser'
        daysLeft:
          type: number
          example: 15
        currentRaise:
          type: number
          example: 400000
        progress:
          type: number
          description: '%'
          example: 22
        numberOfInvestors:
          type: integer
        documents:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              fileLink:
                type: string
              fileName:
                type: string
        videos:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              fileLink:
                type: string
                example: https://www.youtube.com/watch?v=wiXok3NtAMk
              fileName:
                type: string
        issuer:
          type: object
          properties:
            id:
              type: integer
              example: 1
            issuerName:
              type: string
              example: Standard Chartered
            rating:
              type: string
              example: Asf/A+(sf)
            guarantor:
              type: string
              example: SC Bank
            website:
              type: string
              example: https://www.company.com
        bookRunners:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: HSBC
        asset:
          type: object
          properties:
            id:
              type: number
              example: 1
            bondIdentifier:
              type: string
              example: SA-001
            ISIN:
              type: string
              example: ABCD12345
            domesticIdentifier:
              type: string
              example: ABCD12355
            classCode:
              type: string
              enum:
                - A-1
              example: A-1
              description: '[Todo] SelectBox확인'
            currencyCode:
              $ref: '#/components/schemas/CurrencyCode'
            scheduledCallDate:
              type: string
              example: 24 June 2022
            issuePrice:
              type: number
              description: '%'
              example: 100
            minimumDenomination:
              type: number
              example: 1000000
            assetCode:
              type: string
              example: SCB
            assetType:
              $ref: '#/components/schemas/AssetType'
            dealSize:
              type: number
              example: 1000000000
            maturityDate:
              type: string
              example: June 2025
            countryOfRisk:
              type: string
              example: Singapore
            marketOfIssuance:
              type: string
              example: Singopore
            ranking:
              type: integer
              example: 10
        coupon:
          type: object
          properties:
            couponRate:
              type: number
              description: '%'
              example: 5.5
            couponPayment:
              type: string
              example: selectbox todo
            couponType:
              type: string
              example: selectbox todo
            couponFrequency:
              type: string
              example: selectbox todo
            firstCouponDate:
              type: string
              description: 1st Coupon Date
              example: 30 June 2021
            callPutDetail:
              type: string
              example: 30 June 2021
    MyAsset:
      type: "object"
      properties:
        myInvestAmount:
          type: integer
          description: 해당 자산에 투자한 금액
          example: 3000
        assetId:
          type: number
          description: 자산 id
          example: 1
        assetName:
          type: string
          description: 자산 이름
          example: Shareable Asset Holdings
        assetStatus:
          $ref: '#/components/schemas/FundraisingStatus'
        assetStatusForUser:
          $ref: '#/components/schemas/AssetStatusForUser'
        earnedAmount:
          type: integer
          description: 지급 받은 금액
        netAnnualYield:
          type: number
          description: 연 수익율 (annualYieldRate에서 이름 변경)
          example: 5.5
        currencyCode:
          $ref: "#/components/schemas/CurrencyCode"
    MyOrder:
      type: "object"
      properties:
        id:
          type: integer
          description: Order ID
          example: 1
        assetName:
          type: string
          description: Asset 이름
          example: Sharable Asset Holdings 50-4
        investAmount:
          type: number
          description: 투자금액
          example: 220000
        allocatedAmount:
          type: number
          description: 할당 받은 투자 금액
          example: 110000
        allocatedAsset:
          type: number
          description: 할방 받은 Asset(Bond)
          example: 11000
        netAnnualYield:
          type: number
          description: 총 수익율 %
          example: 5.5
        currencyCode:
          $ref: "#/components/schemas/CurrencyCode"
        assetStatus:
          $ref: "#/components/schemas/FundraisingStatus"
          example: Subscribed
        statusHistory:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                example: Subscribed
              changedAt:
                type: string
                example: 11:59 pm 31 Dec

        createdAt:
          type: string
          example: 16:04 PM, Ocotober 13
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dob:
          type: string
          description: "2010-01-01, 생년월일"
        citizenship:
          type: string
          description: "3자리 국가 코드(ISO 3166-1 alpha-3)"
        country:
          type: string
          description: "국가 명"
        address:
          type: string
        subAddress?:
          type: string
        city:
          type: string
        state?:
          type: string
        postalCode:
          type: string
          description: "우편번호"
        sourceOfWealth:
          enum: ['Savings', 'Inheritance', 'Lottery/windfall', 'Investment gains','Others']
          type: array
          items:
            type: string
        sourceOfFunds:
          enum: ['Salary', 'Loans', 'Rental Income', 'Business revenue', 'Dividends', 'Donations', 'Others']
          type: array
          items:
            type: string
        taxRelated:
          type: array
          items:
            type: object
            properties:
              taxCountry:
                type: string
                description: 세금 내는 국가(3자리 국가코드)
              tinNumber?:
                type: string
                description: tin number
              noTinReason?:
                type: string
                description: tin number 없는 이유, ex) No TIN is required
          description: 세금관련 정보
        identityNumber?:
          type: string
          description: "여권번호"
        aliasName?:
          type: string
          description: "별칭"
        countryOfBirth?:
          type: string
          description: "태어난 나라, 3자리코드"
        occupation:
          type: string
          description: "직업명"
        gender?:
          type: string
          description: "성별"
          enum: ['Male', 'Female']
